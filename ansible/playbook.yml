- name: devops app deployment
  hosts: servers
  become: true
  any_errors_fatal: true
  vars_files:
    - "vars/vars_app.yml"
  tasks:
    - name: include vault
      ansible.builtin.include_vars:
        file: "vars/vars_secrets.yml"

    - name: set nameservers
      become: true
      ansible.builtin.lineinfile:
        path: "/etc/resolv.conf"
        line: "nameserver 8.8.8.8"

    - name: Install necessary packages
      ansible.builtin.package:
        name: "{{ item.name }}"
        state: present
      loop: "{{ required_packages }}"

    - name: Clone Remote Git Repository
      ansible.builtin.git:
        repo: "{{ git_repo_url }}"
        dest: "{{ git_repo_dest }}"
      register: git_clone
      ignore_errors: true

    - name: Go mod download and build
      command: >
        bash -c "cd {{ git_repo_dest }} && go mod download && go build -o ./app ./cmd"
      become: true

    # - name: Start the server
    #  command: "{{ git_repo_dest }}/app"
    # become: true
    # Commented this task becasue it blocks the playbook execution
    # (it run in the foreground, occupying the terminal session,
    # and preventing Ansible from proceeding.)

    - name: Start MariaDB
      ansible.builtin.service:
        name: mariadb
        state: started
        enabled: yes

    - name: "Create MariaDB databases"
      mysql_db:
        name: "{{ item }}"
        login_unix_socket: /var/run/mysqld/mysqld.sock #Connecting using socket because we don't have a user
      loop: "{{ mysql_databases }}"

    - name: "Create MariaDB users"
      mysql_user:
        name: "{{ item.name }}"
        password: "{{ lookup('vars', item.name + '_password') }}"
        priv: "*.*:ALL"
        host: "%"
        login_unix_socket: /var/run/mysqld/mysqld.sock
      loop: "{{ mysql_users }}"

    - name: Ensure Docker service is started and enabled
      ansible.builtin.service:
        name: docker
        state: started
        enabled: yes

    - name: Ensure Docker Compose is executable
      ansible.builtin.file:
        path: /usr/local/bin/docker-compose
        mode: u+x
        owner: root
        group: root
        state: link
        src: /usr/bin/docker-compose

    - name: Ensure destination directory exists
      ansible.builtin.file:
        path: /var/www/docker-compose
        state: directory
        mode: "0755"

    #- name: Copy go app to the target machine
    # ansible.builtin.copy:
    #  src: "../go-app"
    # dest: "/var/www/docker-compose/go-app"
    #mode: "0644"

    - name: Copy docker-compose.yml to the target machine
      ansible.builtin.copy:
        src: "../docker-compose/docker-compose.yml"
        dest: "/var/www/docker-compose/docker-compose.yml"
        mode: "0644"

    - name: Create letsencrypt directory
      file:
        path: /var/www/docker-compose/letsencrypt
        state: directory

    - name: Deploy Docker Containers
      community.docker.docker_compose:
        project_src: "/var/www/docker-compose/"
        state: present
        build: yes
        restarted: yes
